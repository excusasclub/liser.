# Generated by Django 5.2.6 on 2025-09-24 06:21

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('catalog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Facet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(choices=[('country', 'Country'), ('season', 'Season'), ('duration', 'Duration'), ('use', 'Use')], max_length=40, unique=True)),
                ('label', models.CharField(max_length=80)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BagList',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=100)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('unlisted', 'Unlisted'), ('registered', 'Registered users'), ('public', 'Public')], db_index=True, default='private', max_length=12)),
                ('cover_image_url', models.URLField(blank=True)),
                ('allow_forks', models.BooleanField(default=True)),
                ('share_token', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='baglists', to='accounts.profile')),
            ],
        ),
        migrations.CreateModel(
            name='BagListItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.PositiveIntegerField(db_index=True)),
                ('note', models.TextField(blank=True)),
                ('pin', models.BooleanField(default=False)),
                ('custom_title', models.CharField(blank=True, max_length=200)),
                ('baglist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='lists.baglist')),
            ],
        ),
        migrations.CreateModel(
            name='BagListItemProductSnapshot',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('snap_title', models.CharField(max_length=255)),
                ('snap_image_url', models.URLField(blank=True)),
                ('snap_price_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('snap_price_currency', models.CharField(blank=True, max_length=3)),
                ('affiliate_url', models.TextField(blank=True)),
                ('canonical_url', models.TextField(blank=True)),
                ('coupon_code', models.CharField(blank=True, max_length=80)),
                ('coupon_expires_at', models.DateTimeField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True)),
                ('extra_links', models.JSONField(blank=True, default=list)),
                ('external_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.externalproduct')),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='snapshot', to='lists.baglistitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BagListSection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('position', models.PositiveIntegerField(db_index=True)),
                ('collapsed_by_default', models.BooleanField(default=False)),
                ('baglist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='lists.baglist')),
            ],
        ),
        migrations.AddField(
            model_name='baglistitem',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='lists.baglistsection'),
        ),
        migrations.CreateModel(
            name='FacetOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.SlugField(max_length=80)),
                ('label', models.CharField(max_length=120)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('facet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='lists.facet')),
            ],
        ),
        migrations.CreateModel(
            name='BagListFacetValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numeric_value', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('numeric_unit', models.CharField(blank=True, choices=[('h', 'Hours'), ('d', 'Days'), ('w', 'Weeks')], max_length=2)),
                ('baglist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facet_values', to='lists.baglist')),
                ('facet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lists.facet')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lists.facetoption')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteBagList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('baglist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lists.baglist')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.profile')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lists.baglistitem')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.profile')),
            ],
        ),
        migrations.CreateModel(
            name='SectionFieldDef',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('key', models.SlugField(max_length=80)),
                ('type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('bool', 'Boolean'), ('date', 'Date'), ('enum', 'Enum'), ('url', 'Url')], max_length=10)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('enum_options', models.JSONField(blank=True, default=list)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_primary', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='lists.baglistsection')),
            ],
        ),
        migrations.CreateModel(
            name='BagListItemFieldValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value_text', models.TextField(blank=True)),
                ('value_number', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('value_bool', models.BooleanField(blank=True, null=True)),
                ('value_date', models.DateField(blank=True, null=True)),
                ('value_enum', models.CharField(blank=True, max_length=80)),
                ('value_url', models.URLField(blank=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_values', to='lists.baglistitem')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='lists.sectionfielddef')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(max_length=80)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='accounts.profile')),
            ],
        ),
        migrations.CreateModel(
            name='BagListTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baglist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lists.baglist')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lists.tag')),
            ],
        ),
        migrations.AddConstraint(
            model_name='baglist',
            constraint=models.UniqueConstraint(fields=('owner', 'slug'), name='uniq_baglist_owner_slug'),
        ),
        migrations.AddConstraint(
            model_name='baglistsection',
            constraint=models.UniqueConstraint(fields=('baglist', 'position'), name='uniq_section_baglist_pos'),
        ),
        migrations.AddConstraint(
            model_name='baglistitem',
            constraint=models.UniqueConstraint(fields=('baglist', 'position'), name='uniq_item_baglist_pos'),
        ),
        migrations.AddConstraint(
            model_name='facetoption',
            constraint=models.UniqueConstraint(
                fields=('facet', 'code'),
                name='uniq_facet_option_code',
            ),
        ),
        migrations.AddIndex(
            model_name='baglistfacetvalue',
            index=models.Index(fields=['baglist', 'facet'], name='lists_bagli_baglist_134e8d_idx'),
        ),
        migrations.AddConstraint(
            model_name='baglistfacetvalue',
            constraint=models.UniqueConstraint(fields=('baglist', 'facet', 'option'), name='uniq_baglist_facet_option'),
        ),
        migrations.AddConstraint(
            model_name='favoritebaglist',
            constraint=models.UniqueConstraint(fields=('profile', 'baglist'), name='uniq_fav_baglist'),
        ),
        migrations.AddConstraint(
            model_name='favoriteproduct',
            constraint=models.UniqueConstraint(fields=('profile', 'item'), name='uniq_fav_item'),
        ),
        migrations.AddConstraint(
            model_name='sectionfielddef',
            constraint=models.UniqueConstraint(
                fields=('section', 'key'),
                name='uniq_section_field_key',
            ),
        ),
        migrations.AddIndex(
            model_name='baglistitemfieldvalue',
            index=models.Index(fields=['field', 'value_number'], name='lists_bagli_field_i_c75378_idx'),
        ),
        migrations.AddIndex(
            model_name='baglistitemfieldvalue',
            index=models.Index(fields=['field', 'value_text'], name='lists_bagli_field_i_11f205_idx'),
        ),
        migrations.AddIndex(
            model_name='baglistitemfieldvalue',
            index=models.Index(fields=['field', 'value_enum'], name='lists_bagli_field_i_c0b1c2_idx'),
        ),
        migrations.AddConstraint(
            model_name='baglistitemfieldvalue',
            constraint=models.UniqueConstraint(
                fields=('item', 'field'),
                name='uniq_item_field_value',
            ),
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('owner', 'slug'), name='uniq_tag_owner_slug'),
        ),
        migrations.AddConstraint(
            model_name='baglisttag',
            constraint=models.UniqueConstraint(fields=('baglist', 'tag'), name='uniq_baglist_tag'),
        ),
    ]
